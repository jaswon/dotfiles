#!/bin/bash

# heavily inspired by https://gist.github.com/insin/1425703

RED="\[\e[31m\]"
YELLOW="\[\e[33m\]"
GREEN="\[\e[32m\]"
CYAN="\[\e[34m\]"
RESET="\[\e[39m\]"
BOW="\[\e[7m\]"
WOB="\[\e[27m\]"

function inv () { printf '\e[7m%s\e[27m' "$@"; }

function git_info () {
  if git rev-parse --git-dir > /dev/null 2>&1; then

    git_status="$(git status 2> /dev/null)"
    # git_branch="$(git branch | cut -f 2 -d ' ')"
    git_branch="$(git rev-parse --abbrev-ref HEAD)"

    # Set color based on clean/staged/dirty.
    if [[ ${git_status} =~ "working tree clean" ]]; then
      state="${GREEN}"
    elif [[ ${git_status} =~ "Changes to be committed" ]]; then
      state="${YELLOW}"
    else
      state="${RED}"
    fi

    # Set arrow icon based on status against remote.
    remote=''
    if [[ ${git_status} =~ "Your branch is "(.*)" of" ]]; then
      if [[ ${BASH_REMATCH[1]} == "ahead" ]]; then
        remote+=" ↑"
      else
        remote+=" ↓"
      fi
    fi
    if [[ ${git_status} =~ "Your branch and "(.*)" have diverged" ]]; then
      remote+=" ↕"
    fi

    echo " ${state}(${git_branch})${remote}${RESET}"
  else
    echo ""
  fi
}

function len_basename () {
	if [[ $(pwd) == "$HOME" ]]; then
		echo -n 1
	else
		printf '%s' $(basename $(pwd)) | wc -c
	fi
}

function virtualenv_info () {
  [[ -n $VIRTUAL_ENV ]] && echo "($(basename $VIRTUAL_ENV)) "
}

function set_prompt () {
	PS1="╰ $(virtualenv_info)${CYAN}\W \$$(git_info) ${RESET}"
	echo
	printf '╭'
	printf '─%.0s' $(seq -2 $(len_basename))
	echo
}

PROMPT_COMMAND=set_prompt
